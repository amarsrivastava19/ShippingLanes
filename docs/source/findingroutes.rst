Finding Routes
==============

This page describes how to use the `findRoutes` method in **ShippingLanes** to generate and work with route data, including definitions, expected inputs, and how to handle returned data.

What is a Route?
----------------

A **Route** object represents a path generated by **ShippingLanes** and contains essential attributes to describe the journey.

- **Distance**: The total distance of the route in miles.
- **NodePath**: A list of node identifiers marking the sequence of points along the route.
- **CoordinatePath**: A list of latitude and longitude pairs that represent the path in geographic coordinates.


Input Data
----------

The `findRoutes` method expects the input data to be formatted as a list of lists, where each inner list contains four values: origin latitude, origin longitude, destination latitude, and destination longitude. If your coordinate data is stored in a Pandas DataFrame, you can convert it to the required format using `df.values.tolist()`:

.. code-block:: python

   
   import pandas as pd

   df = pd.DataFrame({
       "origin_latitude": [34.0522, 36.1699],
       "origin_longitude": [-118.2437, -115.1398],
       "destination_latitude": [37.7749, 40.7128],
       "destination_longitude": [-122.4194, -74.0060]
   })

   # Convert to list of lists format
   coordinates = df.values.tolist()


Returned Routes
---------------

The routes returned by `findRoutes` can be directly incorporated back into your original DataFrame. Hereâ€™s an example:

.. code-block:: python

  routes = findRoutes(coordinates)

   df["Distance"] = [route.Distance for route in routes]
   df["NodePath"] = [route.NodePath for route in routes]
   df["CoordinatePath"] = [route.CoordinatePath for route in routes]

